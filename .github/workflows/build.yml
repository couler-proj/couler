name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.0' # The Go version to download (if necessary) and use.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt -r requirements-dev.txt
        go get github.com/golang/protobuf/protoc-gen-go@v1.3.2
        go get golang.org/x/lint/golint
        go get github.com/argoproj/argo@release-2.8
    - name: Install protoc
      uses: arduino/setup-protoc@v1
      with:
          version: '3.14.0'
    - name: Sanity checks
      run: |
        pre-commit run -a --show-diff-on-failure
    - name: Python Unit tests
      run: |
        set -e
        bash ./scripts/test_python.sh
    - name: Go Unit tests
      run: |
        set -e
        bash ./scripts/test_go.sh
    - uses: opsgang/ga-setup-minikube@v0.1.1
      with:
          minikube-version: 1.11.0
          k8s-version: 1.18.3
    - name: Integration tests
      run: |
        minikube config set vm-driver docker
        minikube config set kubernetes-version 1.18.3
        minikube start

        kubectl create ns argo
        kubectl create sa default -n argo
        kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo/v2.12.0-rc1/manifests/quick-start-minimal.yaml
        kubectl wait -n argo --for=condition=Ready pods --all --timeout=300s

        kubectl apply -n argo -f manifests/mpi-operator.yaml

        go build -buildmode=c-shared -o submit.so go/couler/commands/submit.go
        scripts/integration_tests.sh
        export E2E_TEST=true
        go test -timeout 3m ./go/couler/submitter/... -v
